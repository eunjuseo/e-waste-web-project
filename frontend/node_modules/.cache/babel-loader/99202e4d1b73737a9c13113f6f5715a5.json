{"ast":null,"code":"import _classCallCheck from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MainNavigation from './components/Navigation/MainNavigation/MainNavigation';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost'; // import LoginPage from './pages/Auth/Login';\n// import SignupPage from './pages/Auth/Signup';\n\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showBackdrop: false,\n      showMobileNav: false,\n      isAuth: true,\n      token: null,\n      userId: null,\n      authLoading: false,\n      error: null\n    };\n\n    _this.mobileNavHandler = function (isOpen) {\n      _this.setState({\n        showMobileNav: isOpen,\n        showBackdrop: isOpen\n      });\n    };\n\n    _this.backdropClickHandler = function () {\n      _this.setState({\n        showBackdrop: false,\n        showMobileNav: false,\n        error: null\n      });\n    };\n\n    _this.errorHandler = function () {\n      _this.setState({\n        error: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var routes = React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(SinglePostPage, Object.assign({}, props, {\n            userId: _this2.state.userId,\n            token: _this2.state.token,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:postId\",\n        exact: true,\n        render: function render(props) {\n          return React.createElement(SinglePostPage, Object.assign({}, props, {\n            userId: _this2.state.userId,\n            token: _this2.state.token,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:postId\",\n        render: function render(props) {\n          return React.createElement(FeedPage, {\n            userId: _this2.state.userId,\n            token: _this2.state.token,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })); // if (this.state.isAuth) {\n      //   routes = (\n      //     <Switch>\n      //       <Route\n      //         path=\"/\"\n      //         exact\n      //         render={props => (\n      //           <LoginPage\n      //             {...props}\n      //             onLogin={this.loginHandler}\n      //             loading={this.state.authLoading}\n      //           />\n      //         )}\n      //       />\n      //       <Route\n      //         path=\"/signup\"\n      //         exact\n      //         render={props => (\n      //           <SignupPage\n      //             {...props}\n      //             onSignup={this.signupHandler}\n      //             loading={this.state.authLoading}\n      //           />\n      //         )}\n      //       />\n      //       <Redirect to=\"/\" />\n      //     </Switch>\n      //   );\n      // }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, this.state.showBackdrop && React.createElement(Backdrop, {\n        onClick: this.backdropClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(ErrorHandler, {\n        error: this.state.error,\n        onHandle: this.errorHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(Layout, {\n        header: React.createElement(Toolbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(MainNavigation, {\n          onOpenMobileNav: this.mobileNavHandler.bind(this, true),\n          onLogout: this.logoutHandler,\n          isAuth: this.state.isAuth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        })),\n        mobileNav: React.createElement(MobileNavigation, {\n          open: this.state.showMobileNav,\n          mobile: true,\n          onChooseItem: this.mobileNavHandler.bind(this, false),\n          onLogout: this.logoutHandler,\n          isAuth: this.state.isAuth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), routes);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/src/App.js"],"names":["React","Component","Fragment","Route","Switch","Redirect","withRouter","Layout","Backdrop","Toolbar","MainNavigation","MobileNavigation","ErrorHandler","FeedPage","SinglePostPage","App","state","showBackdrop","showMobileNav","isAuth","token","userId","authLoading","error","mobileNavHandler","isOpen","setState","backdropClickHandler","errorHandler","routes","props","bind","logoutHandler"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport MainNavigation from './components/Navigation/MainNavigation/MainNavigation';\nimport MobileNavigation from './components/Navigation/MobileNavigation/MobileNavigation';\nimport ErrorHandler from './components/ErrorHandler/ErrorHandler';\nimport FeedPage from './pages/Feed/Feed';\nimport SinglePostPage from './pages/Feed/SinglePost/SinglePost';\n// import LoginPage from './pages/Auth/Login';\n// import SignupPage from './pages/Auth/Signup';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: true,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null\n  };\n\n  // componentDidMount() {\n  //   const token = localStorage.getItem('token');\n  //   const expiryDate = localStorage.getItem('expiryDate');\n  //   if (!token || !expiryDate) {\n  //     return;\n  //   }\n  //   if (new Date(expiryDate) <= new Date()) {\n  //     this.logoutHandler();\n  //     return;\n  //   }\n  //   const userId = localStorage.getItem('userId');\n  //   const remainingMilliseconds =\n  //     new Date(expiryDate).getTime() - new Date().getTime();\n  //   this.setState({ isAuth: true, token: token, userId: userId });\n  //   this.setAutoLogout(remainingMilliseconds);\n  // }\n\n  mobileNavHandler = isOpen => {\n    this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n  };\n\n  // logoutHandler = () => {\n  //   this.setState({ isAuth: false, token: null });\n  //   localStorage.removeItem('token');\n  //   localStorage.removeItem('expiryDate');\n  //   localStorage.removeItem('userId');\n  // };\n\n  // loginHandler = (event, authData) => {\n  //   event.preventDefault();\n  //   this.setState({ authLoading: true });\n  //   fetch('URL')\n  //     .then(res => {\n  //       if (res.status === 422) {\n  //         throw new Error('Validation failed.');\n  //       }\n  //       if (res.status !== 200 && res.status !== 201) {\n  //         console.log('Error!');\n  //         throw new Error('Could not authenticate you!');\n  //       }\n  //       return res.json();\n  //     })\n  //     .then(resData => {\n  //       console.log(resData);\n  //       this.setState({\n  //         isAuth: true,\n  //         token: resData.token,\n  //         authLoading: false,\n  //         userId: resData.userId\n  //       });\n  //       localStorage.setItem('token', resData.token);\n  //       localStorage.setItem('userId', resData.userId);\n  //       const remainingMilliseconds = 60 * 60 * 1000;\n  //       const expiryDate = new Date(\n  //         new Date().getTime() + remainingMilliseconds\n  //       );\n  //       localStorage.setItem('expiryDate', expiryDate.toISOString());\n  //       this.setAutoLogout(remainingMilliseconds);\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //       this.setState({\n  //         isAuth: false,\n  //         authLoading: false,\n  //         error: err\n  //       });\n  //     });\n  // };\n\n  // signupHandler = (event, authData) => {\n  //   event.preventDefault();\n  //   this.setState({ authLoading: true });\n  //   fetch('URL')\n  //     .then(res => {\n  //       if (res.status === 422) {\n  //         throw new Error(\n  //           \"Validation failed. Make sure the email address isn't used yet!\"\n  //         );\n  //       }\n  //       if (res.status !== 200 && res.status !== 201) {\n  //         console.log('Error!');\n  //         throw new Error('Creating a user failed!');\n  //       }\n  //       return res.json();\n  //     })\n  //     .then(resData => {\n  //       console.log(resData);\n  //       this.setState({ isAuth: false, authLoading: false });\n  //       this.props.history.replace('/');\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //       this.setState({\n  //         isAuth: false,\n  //         authLoading: false,\n  //         error: err\n  //       });\n  //     });\n  // };\n\n  // setAutoLogout = milliseconds => {\n  //   setTimeout(() => {\n  //     this.logoutHandler();\n  //   }, milliseconds);\n  // };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route \n          path=\"/\"\n          render={props => (\n            <SinglePostPage\n              {...props}\n              userId={this.state.userId}\n              token={this.state.token}\n            />\n          )}\n        />\n        <Route\n          path=\"/:postId\"\n          exact\n          render={props => (\n            <SinglePostPage\n              {...props}\n              userId={this.state.userId}\n              token={this.state.token}\n            />\n          \n          )}\n        />\n        <Route\n          path=\"/:postId\"\n          render={props => (\n            <FeedPage userId={this.state.userId} token={this.state.token} />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    // if (this.state.isAuth) {\n      \n\n    //   routes = (\n    //     <Switch>\n    //       <Route\n    //         path=\"/\"\n    //         exact\n    //         render={props => (\n    //           <LoginPage\n    //             {...props}\n    //             onLogin={this.loginHandler}\n    //             loading={this.state.authLoading}\n    //           />\n    //         )}\n    //       />\n    //       <Route\n    //         path=\"/signup\"\n    //         exact\n    //         render={props => (\n    //           <SignupPage\n    //             {...props}\n    //             onSignup={this.signupHandler}\n    //             loading={this.state.authLoading}\n    //           />\n    //         )}\n    //       />\n    //       <Redirect to=\"/\" />\n    //     </Switch>\n    //   );\n    // }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n                onLogout={this.logoutHandler}\n                isAuth={this.state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}