{"ast":null,"code":"import _defineProperty from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/src/components/Feed/FeedEdit/FeedEdit.js\";\nimport React, { Component, Fragment } from 'react';\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\nvar POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({\n      min: 5\n    })]\n  },\n  // image: {\n  //   value: '',\n  //   valid: false,\n  //   touched: false,\n  //   validators: [required]\n  // },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({\n      min: 5\n    })]\n  }\n};\n\nvar FeedEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FeedEdit, _Component);\n\n  function FeedEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FeedEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FeedEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      postForm: POST_FORM,\n      formIsValid: false // imagePreview: null\n\n    };\n\n    _this.postInputChangeHandler = function (input, value, files) {\n      if (files) {\n        generateBase64FromImage(files[0]).then(function (b64) {\n          _this.setState({\n            imagePreview: b64\n          });\n        }).catch(function (e) {\n          _this.setState({\n            imagePreview: null\n          });\n        });\n      }\n\n      _this.setState(function (prevState) {\n        var isValid = true;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.postForm[input].validators[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var validator = _step.value;\n            isValid = isValid && validator(value);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        var updatedForm = _objectSpread({}, prevState.postForm, _defineProperty({}, input, _objectSpread({}, prevState.postForm[input], {\n          valid: isValid,\n          value: files ? files[0] : value\n        })));\n\n        var formIsValid = true;\n\n        for (var inputName in updatedForm) {\n          formIsValid = formIsValid && updatedForm[inputName].valid;\n        }\n\n        return {\n          postForm: updatedForm,\n          formIsValid: formIsValid\n        };\n      });\n    };\n\n    _this.inputBlurHandler = function (input) {\n      _this.setState(function (prevState) {\n        return {\n          postForm: _objectSpread({}, prevState.postForm, _defineProperty({}, input, _objectSpread({}, prevState.postForm[input], {\n            touched: true\n          })))\n        };\n      });\n    };\n\n    _this.cancelPostChangeHandler = function () {\n      _this.setState({\n        postForm: POST_FORM,\n        formIsValid: false\n      });\n\n      _this.props.onCancelEdit();\n    };\n\n    _this.acceptPostChangeHandler = function () {\n      var post = {\n        title: _this.state.postForm.title.value,\n        //image: this.state.postForm.image.value,\n        content: _this.state.postForm.content.value\n      };\n\n      _this.props.onFinishEdit(post);\n\n      _this.setState({\n        postForm: POST_FORM,\n        formIsValid: false //imagePreview: null\n\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FeedEdit, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.editing && prevProps.editing !== this.props.editing && prevProps.selectedPost !== this.props.selectedPost) {\n        var postForm = {\n          title: _objectSpread({}, prevState.postForm.title, {\n            value: this.props.selectedPost.title,\n            valid: true\n          }),\n          // image: {\n          //   ...prevState.postForm.image,\n          //   value: this.props.selectedPost.imagePath,\n          //   valid: true\n          // },\n          content: _objectSpread({}, prevState.postForm.content, {\n            value: this.props.selectedPost.content,\n            valid: true\n          })\n        };\n        this.setState({\n          postForm: postForm,\n          formIsValid: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.editing ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Backdrop, {\n        onClick: this.cancelPostChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        title: \"New Post\",\n        acceptEnabled: this.state.formIsValid,\n        onCancelModal: this.cancelPostChangeHandler,\n        onAcceptModal: this.acceptPostChangeHandler,\n        isLoading: this.props.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"title\",\n        label: \"Title\",\n        control: \"input\",\n        onChange: this.postInputChangeHandler,\n        onBlur: this.inputBlurHandler.bind(this, 'title'),\n        valid: this.state.postForm['title'].valid,\n        touched: this.state.postForm['title'].touched,\n        value: this.state.postForm['title'].value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Input, {\n        id: \"content\",\n        label: \"Content\",\n        control: \"textarea\",\n        rows: \"5\",\n        onChange: this.postInputChangeHandler,\n        onBlur: this.inputBlurHandler.bind(this, 'content'),\n        valid: this.state.postForm['content'].valid,\n        touched: this.state.postForm['content'].touched,\n        value: this.state.postForm['content'].value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })))) : null;\n    }\n  }]);\n\n  return FeedEdit;\n}(Component);\n\nexport default FeedEdit;","map":{"version":3,"sources":["/Users/eunjuseo/Documents/Coding/Web_Development/e-waste-web-project/frontend/src/components/Feed/FeedEdit/FeedEdit.js"],"names":["React","Component","Fragment","Backdrop","Modal","Input","FilePicker","Image","required","length","generateBase64FromImage","POST_FORM","title","value","valid","touched","validators","min","content","FeedEdit","state","postForm","formIsValid","postInputChangeHandler","input","files","then","b64","setState","imagePreview","catch","e","prevState","isValid","validator","updatedForm","inputName","inputBlurHandler","cancelPostChangeHandler","props","onCancelEdit","acceptPostChangeHandler","post","onFinishEdit","prevProps","editing","selectedPost","loading","bind"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport Backdrop from '../../Backdrop/Backdrop';\nimport Modal from '../../Modal/Modal';\nimport Input from '../../Form/Input/Input';\nimport FilePicker from '../../Form/Input/FilePicker';\nimport Image from '../../Image/Image';\nimport { required, length } from '../../../util/validators';\nimport { generateBase64FromImage } from '../../../util/image';\n\nconst POST_FORM = {\n  title: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  },\n  // image: {\n  //   value: '',\n  //   valid: false,\n  //   touched: false,\n  //   validators: [required]\n  // },\n  content: {\n    value: '',\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })]\n  }\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n   // imagePreview: null\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true\n        },\n        // image: {\n        //   ...prevState.postForm.image,\n        //   value: this.props.selectedPost.imagePath,\n        //   valid: true\n        // },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true\n        }\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then(b64 => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch(e => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      //image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value\n    };\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      //imagePreview: null\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'title')}\n              valid={this.state.postForm['title'].valid}\n              touched={this.state.postForm['title'].touched}\n              value={this.state.postForm['title'].value}\n            />\n            {/* <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'image')}\n              valid={this.state.postForm['image'].valid}\n              touched={this.state.postForm['image'].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div> */}\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, 'content')}\n              valid={this.state.postForm['content'].valid}\n              touched={this.state.postForm['content'].touched}\n              value={this.state.postForm['content'].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n"]},"metadata":{},"sourceType":"module"}